// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



// user
model User {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  username          String?
  email             String? @unique
  emailVerified     DateTime?
  image             String?
  password          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  accounts          Account[]
  products          Product[]
  comments          Comment[]
  featured          Featured[]
}


// account
model Account {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  userId                String @db.ObjectId
  type                  String
  provider              String
  providerAccountId     String
  refresh_token         String? @db.String
  access_token          String? @db.String
  expires_at            Int?
  token_type            String?
  scope                 String?
  id_token              String? @db.String
  session_state         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


// product
model Product {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Int
  quantity      Int
  category      String
  rating        Float?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  user          User              @relation(fields: [userId], references: [id])
  userId        String            @db.ObjectId
  images        String[]
  comments      Comment[]
  favorites     Featured[]
}


// featured
model Featured {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  userId      String            @db.ObjectId
  user        User              @relation(fields: [userId], references: [id])
  productId   String            @db.ObjectId
  product     Product           @relation(fields: [productId], references: [id])
}


// comments
model Comment {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  content       String
  rating        Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId        String @db.ObjectId
  product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId     String @db.ObjectId
}